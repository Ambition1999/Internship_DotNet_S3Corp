@model Model.DTO.DtoRegisterAccount

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/CSSFile/Now_LoginPageCSS.css">
<link rel="stylesheet" href="~/Content/CSSFile/Now_SignUpPageCSS.css">

<div class="title">
    <h2><span>Create Acccount</span></h2>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
</div>
<div class="login-form" id="form-1">
    @using (Html.BeginForm("RegisterAccount", "User", FormMethod.Post))
    {
    <div class="form-container">
        <div class="field-group">
            <div class="input-group">
                <span class="name">Name:</span>
                @Html.TextBoxFor(model => model.Name, new { id = "name", placeHolder = "Name", @class = " input" })
                <span class="form-message"></span>
            </div>
        </div>
        <div class="field-group">
            <div class="input-group">
                <span class="username">Username:</span>
                @Html.TextBoxFor(model => model.Username, new { id = "username", placeHolder = "Username", @class = " input" })
                <span class="form-message"></span>
            </div>
        </div>
        <div class="field-group">
            <div class="input-group">
                <span class="password">Password:</span>
                @Html.PasswordFor(model => model.Password, new { id = "password", placeHolder = "Password", @class = " input" })
                <span class="form-message"></span>
            </div>
        </div>
        @*<div class="field-group">
            <div class="input-group">
                <span class="confirm-password">Confirm Password:</span>
                @Html.PasswordFor(model => model.Password, new { id = "confirm-password", placeHolder = "Confirm Password", @class = " input" })
                <span class="form-message"></span>
            </div>
        </div>*@
        <div class="field-group">
            <div class="input-group">
                <span class="gender">Gender:</span>
                <div class="gender-radio">
                    <div class="gender-box">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "input" }) Nam
                    </div>
                    <div class="gender-box">
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "input" }) Nữ
                    </div>
                </div>
                <span class="form-message"></span>
            </div>
        </div>
        <div class="field-group">
            <div class="input-group">
                <span class="Email">Email:</span>
                @Html.TextBoxFor(model => model.Email, new { id = "email", placeHolder = "Email Address", @class = " input" })
                <span class="form-message"></span>
            </div>
        </div>
        <div class="field-group">
            <div class="input-group">
                <span class="phone-number">Phone:</span>
                @Html.TextBoxFor(model => model.Phone, new { id = "phone", placeHolder = "Phone Number", @class = " input" })
                <span class="form-message"></span>
            </div>
        </div>
        <div class="field-group">
            <div class="input-group">
                <span class="birth-day">Birth Day:</span>
                <input type="date" class="input" name="birth-day" id="birth-day">
                @*@Html.TextBoxFor(model => model.BirthDay, new { id = "birthday", @type = "date", @class = "form-control datepicker input", @Value = Model.BirthDay.ToString("yyyy-MM-dd") })*@
                <span class="form-message"></span>
            </div>
        </div>
        <button class="btn btn-submit" type="submit">Create</button>
        
    </div>
    }
</div>
<script src="~/Content/JsFile/ValidateForm.js"></script>
<script>
            Validator({
                form: '#form-1',
                errorSelector: '.form-message',
                rules: [
                    Validator.isRequired('#username'),
                    Validator.isRequired('#password'),
                    //Validator.isEmail('#password'),
                    Validator.isRequired('#name'),
                    Validator.isRequired('#email'),
                    Validator.isRequired('#phone'),
                    Validator.isRequired('#confirm-password'),
                ]
            })
</script>

