@model Model.DTO.DtoRegisterAccount

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/CSSFile/Now_LoginPageCSS.css">
<link rel="stylesheet" href="~/Content/CSSFile/Now_SignUpPageCSS.css">

<div class="title">
    <h2><span>Create Acccount</span></h2>
</div>
<div class="login-form" >
    @using (Html.BeginForm("RegisterAccount", "User", FormMethod.Post, new { id = "form-1"}))
    {
        <div class="form-container">
            <div class="field-group">
                <div class="input-group">
                    <span class="name">Name:</span>
                    @Html.TextBoxFor(model => model.Name, new { id = "name", name = "name", placeHolder = "Name", @class = " input" })
                    <span class="form-message"></span>
                </div>
            </div>
            <div class="field-group">
                <div class="input-group">
                    <span class="username">Username:</span>
                    @Html.TextBoxFor(model => model.Username, new { id = "username", name = "username", placeHolder = "Username", @class = " input" })
                    <span class="form-message"></span>
                </div>
            </div>
            <div class="field-group">
                <div class="input-group">
                    <span class="password">Password:</span>
                    @Html.PasswordFor(model => model.Password, new { id = "password", name = "password", placeHolder = "Password", @class = " input" })
                    <span class="form-message"></span>
                </div>
            </div>
            <div class="field-group">
                    <div class="input-group">
                        <span class="confirm-password">Confirm Password:</span>
                        @Html.PasswordFor(model => model.Password, new { id = "confirm-password", name = "confirm-password", placeHolder = "Confirm Password", @class = " input" })
                        <span class="form-message"></span>
                    </div>
                </div>
            <div class="field-group">
                <div class="input-group">
                    <span class="gender">Gender:</span>
                    <div class="gender-radio">
                        <div class="gender-box">
                            @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "input" }) Nam
                        </div>
                        <div class="gender-box">
                            @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "input" }) Nữ
                        </div>
                    </div>
                    <span class="form-message"></span>
                </div>
            </div>
            <div class="field-group">
                <div class="input-group">
                    <span class="Email">Email:</span>
                    @Html.TextBoxFor(model => model.Email, new { id = "email", name = "email", placeHolder = "Email Address", @class = " input" })
                    <span class="form-message"></span>
                </div>
            </div>
            <div class="field-group">
                <div class="input-group">
                    <span class="phone-number">Phone:</span>
                    @Html.TextBoxFor(model => model.Phone, new { id = "phone", name = "phone",placeHolder = "Phone Number", @class = " input" })
                    <span class="form-message"></span>
                </div>
            </div>
            <button class="btn btn-submit form-submit" type="submit">Create</button>
        </div>
    }
</div>
<script src="~/Content/JsFile/ValidateForm.js"></script>
<script>
    Validator({
        form: '#form-1',
        errorSelector: '.form-message',
        rules: [
            Validator.isRequired('#name'),
            Validator.isRequired('#username'),
            Validator.isRequired('#password'),
            //Validator.minLength('#password', 6, 10, "Mật khẩu phải chứa từ 6 đến 10 kí tự"),
            Validator.isRequired('#confirm-password'),
            Validator.isConfirmed('#confirm-password', function () {
                return document.querySelector('#form-1 #password').value;
            }, "Mật khẩu nhập lại không chính xác"),
            Validator.isRequired('#name'),
            Validator.isEmail('#email'),
            Validator.isRequired('#phone'),
        ],
        //onSubmit: function (data) {
        //    console.log(data);
        //}
        //onSubmit: function () {}
    })
</script>

@Html.Raw(TempData["RegisterMessageHTML"]);